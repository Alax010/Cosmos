[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if effects[ii].h_mult then"
position = "before"
payload = """
if effects[ii].h_chips then
    mod_percent = true
    hand_chips = mod_chips(hand_chips + effects[ii].h_chips)
    update_hand_text({delay = 0}, {chips  = hand_chips})
    card_eval_status_text(G.hand.cards[i], 'h_chips', effects[ii].h_chips, percent)
end
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "function Card:get_chip_h_mult()"
position = "before"
payload = """
function Card:get_chip_h_chips()
    if self.debuff then return 0 end
    return self.ability.h_chips
end
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "h_mult = center.config.h_mult or 0,"
position = "before"
payload = """h_chips = center.config.h_chips or 0,"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "local h_mult = card:get_chip_h_mult()"
position = "before"
payload = """
        local h_chips = card:get_chip_h_chips()
        if h_chips > 0 then 
            ret.h_mult = h_chips
        end
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif eval_type == 'h_mult' then "
position = "before"
payload = """
elseif eval_type == 'h_chips' then 
    sound = 'chips1'
    amt = amt
    text = localize{type='variable',key='a_chips',vars={amt}}
    colour = G.C.CHIPS
    delay = 0.6
--    config.type = 'fade'
--    config.scale = 0.7
"""
match_indent = true